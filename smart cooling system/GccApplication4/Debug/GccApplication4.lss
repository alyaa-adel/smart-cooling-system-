
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000d98  00000e2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010a  0080010a  00000e36  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e36  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ed7  00000000  00000000  00000f64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000954  00000000  00000000  00001e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006c1  00000000  00000000  0000278f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00002e50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000471  00000000  00000000  00002f50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000517  00000000  00000000  000033c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000038d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 61 01 	jmp	0x2c2	; 0x2c2 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e9       	ldi	r30, 0x98	; 152
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 30       	cpi	r26, 0x0C	; 12
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 bb 00 	call	0x176	; 0x176 <main>
  9e:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCD_Command>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a6:	95 b1       	in	r25, 0x05	; 5
  a8:	9f 70       	andi	r25, 0x0F	; 15
  aa:	28 2f       	mov	r18, r24
  ac:	20 7f       	andi	r18, 0xF0	; 240
  ae:	92 2b       	or	r25, r18
  b0:	95 b9       	out	0x05, r25	; 5
  b2:	95 b1       	in	r25, 0x05	; 5
  b4:	9e 7f       	andi	r25, 0xFE	; 254
  b6:	95 b9       	out	0x05, r25	; 5
  b8:	95 b1       	in	r25, 0x05	; 5
  ba:	92 60       	ori	r25, 0x02	; 2
  bc:	95 b9       	out	0x05, r25	; 5
  be:	00 00       	nop
  c0:	95 b1       	in	r25, 0x05	; 5
  c2:	9d 7f       	andi	r25, 0xFD	; 253
  c4:	95 b9       	out	0x05, r25	; 5
  c6:	32 e4       	ldi	r19, 0x42	; 66
  c8:	3a 95       	dec	r19
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_Command+0x22>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_Command+0x28>
  ce:	25 b1       	in	r18, 0x05	; 5
  d0:	30 e1       	ldi	r19, 0x10	; 16
  d2:	83 9f       	mul	r24, r19
  d4:	c0 01       	movw	r24, r0
  d6:	11 24       	eor	r1, r1
  d8:	92 2f       	mov	r25, r18
  da:	9f 70       	andi	r25, 0x0F	; 15
  dc:	89 2b       	or	r24, r25
  de:	85 b9       	out	0x05, r24	; 5
  e0:	85 b1       	in	r24, 0x05	; 5
  e2:	82 60       	ori	r24, 0x02	; 2
  e4:	85 b9       	out	0x05, r24	; 5
  e6:	00 00       	nop
  e8:	85 b1       	in	r24, 0x05	; 5
  ea:	8d 7f       	andi	r24, 0xFD	; 253
  ec:	85 b9       	out	0x05, r24	; 5
  ee:	83 ef       	ldi	r24, 0xF3	; 243
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Command+0x4c>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <LCD_Command+0x52>
  f8:	00 00       	nop
  fa:	08 95       	ret

000000fc <LCD_Clear>:
	_delay_ms(2);
}

void LCD_Clear(void)
{
	LCD_Command(0x01); // Clear LCD
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
 102:	83 ef       	ldi	r24, 0xF3	; 243
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Clear+0xa>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Clear+0x10>
 10c:	00 00       	nop
	_delay_ms(2); // Wait to clear LCD
	LCD_Command(0x80); // Move to Position Line 1, Position 1
 10e:	80 e8       	ldi	r24, 0x80	; 128
 110:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
 114:	08 95       	ret

00000116 <LCD_Print>:
}

void LCD_Print(char *str)
{
 116:	fc 01       	movw	r30, r24
	while (*str)
 118:	2a c0       	rjmp	.+84     	; 0x16e <LCD_Print+0x58>
	{
		LCD_DATA_PORT = (LCD_DATA_PORT & 0x0F) | (*str & 0xF0); // Send higher nibble
 11a:	85 b1       	in	r24, 0x05	; 5
 11c:	8f 70       	andi	r24, 0x0F	; 15
 11e:	90 7f       	andi	r25, 0xF0	; 240
 120:	98 2b       	or	r25, r24
 122:	95 b9       	out	0x05, r25	; 5
		PORTB |= (1 << LCD_RS); // RS = 1 for data
 124:	85 b1       	in	r24, 0x05	; 5
 126:	81 60       	ori	r24, 0x01	; 1
 128:	85 b9       	out	0x05, r24	; 5
		PORTB |= (1 << LCD_E); // Enable pulse
 12a:	85 b1       	in	r24, 0x05	; 5
 12c:	82 60       	ori	r24, 0x02	; 2
 12e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 130:	00 00       	nop
		_delay_us(1);
		PORTB &= ~(1 << LCD_E);
 132:	95 b1       	in	r25, 0x05	; 5
 134:	9d 7f       	andi	r25, 0xFD	; 253
 136:	95 b9       	out	0x05, r25	; 5
 138:	82 e4       	ldi	r24, 0x42	; 66
 13a:	8a 95       	dec	r24
 13c:	f1 f7       	brne	.-4      	; 0x13a <LCD_Print+0x24>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <LCD_Print+0x2a>

		_delay_us(200);

		LCD_DATA_PORT = (LCD_DATA_PORT & 0x0F) | (*str << 4); // Send lower nibble
 140:	45 b1       	in	r20, 0x05	; 5
 142:	91 91       	ld	r25, Z+
 144:	80 e1       	ldi	r24, 0x10	; 16
 146:	98 9f       	mul	r25, r24
 148:	90 01       	movw	r18, r0
 14a:	11 24       	eor	r1, r1
 14c:	94 2f       	mov	r25, r20
 14e:	9f 70       	andi	r25, 0x0F	; 15
 150:	29 2b       	or	r18, r25
 152:	25 b9       	out	0x05, r18	; 5
		PORTB |= (1 << LCD_E); // Enable pulse
 154:	95 b1       	in	r25, 0x05	; 5
 156:	92 60       	ori	r25, 0x02	; 2
 158:	95 b9       	out	0x05, r25	; 5
 15a:	00 00       	nop
		_delay_us(1);
		PORTB &= ~(1 << LCD_E);
 15c:	95 b1       	in	r25, 0x05	; 5
 15e:	9d 7f       	andi	r25, 0xFD	; 253
 160:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	83 ef       	ldi	r24, 0xF3	; 243
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <LCD_Print+0x50>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <LCD_Print+0x56>
 16c:	00 00       	nop
	LCD_Command(0x80); // Move to Position Line 1, Position 1
}

void LCD_Print(char *str)
{
	while (*str)
 16e:	90 81       	ld	r25, Z
 170:	91 11       	cpse	r25, r1
 172:	d3 cf       	rjmp	.-90     	; 0x11a <LCD_Print+0x4>
		PORTB &= ~(1 << LCD_E);

		_delay_ms(2);
		str++;
	}
}
 174:	08 95       	ret

00000176 <main>:
#define FAN_PIN PD6

volatile uint16_t timeCounter = 0;

int main(void)
{
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	cd b7       	in	r28, 0x3d	; 61
 17c:	de b7       	in	r29, 0x3e	; 62
 17e:	60 97       	sbiw	r28, 0x10	; 16
 180:	0f b6       	in	r0, 0x3f	; 63
 182:	f8 94       	cli
 184:	de bf       	out	0x3e, r29	; 62
 186:	0f be       	out	0x3f, r0	; 63
 188:	cd bf       	out	0x3d, r28	; 61
    
    ADC_init();
 18a:	0e 94 86 01 	call	0x30c	; 0x30c <ADC_init>
  
    // Initialize Timer0 for PWM(responsible for active led , better for motors )
    TCCR0A |= (1 << COM0A1) | (1 << WGM01) | (1 << WGM00);//mode clear on match  and fast pwm
 18e:	84 b5       	in	r24, 0x24	; 36
 190:	83 68       	ori	r24, 0x83	; 131
 192:	84 bd       	out	0x24, r24	; 36
   // OCR0A = (unsigned char)(0.5*255);
	TCCR0B |= (1 << CS00);//prescalar clk/1-->16MHZ
 194:	85 b5       	in	r24, 0x25	; 37
 196:	81 60       	ori	r24, 0x01	; 1
 198:	85 bd       	out	0x25, r24	; 37
   
    DDRD |= (1 << FAN_PIN);
 19a:	8a b1       	in	r24, 0x0a	; 10
 19c:	80 64       	ori	r24, 0x40	; 64
 19e:	8a b9       	out	0x0a, r24	; 10
	
    // Initialize Timer1 for interrupt(auto turn off)
    TCCR1B |= (1 << WGM12);       // Set Timer1 in CTC mode
 1a0:	e1 e8       	ldi	r30, 0x81	; 129
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	88 60       	ori	r24, 0x08	; 8
 1a8:	80 83       	st	Z, r24
    TCCR1B |= (1 << CS11) | (1 << CS10); // Set prescaler to 64
 1aa:	80 81       	ld	r24, Z
 1ac:	83 60       	ori	r24, 0x03	; 3
 1ae:	80 83       	st	Z, r24
    OCR1A = 15625;       // Set compare value for 1 second at 16 MHz(1*10^6)/64
 1b0:	89 e0       	ldi	r24, 0x09	; 9
 1b2:	9d e3       	ldi	r25, 0x3D	; 61
 1b4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    TIMSK1 |= (1 << OCIE1A);      // Enable Timer1 
 1bc:	ef e6       	ldi	r30, 0x6F	; 111
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	82 60       	ori	r24, 0x02	; 2
 1c4:	80 83       	st	Z, r24
    sei();  // Enable global interrupts
 1c6:	78 94       	sei

    // Initialize the LCD
  
    LCD_DDR = 0xFF; // Set PORTB as output
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	84 b9       	out	0x04, r24	; 4
 1cc:	87 e8       	ldi	r24, 0x87	; 135
 1ce:	93 e1       	ldi	r25, 0x13	; 19
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <main+0x5a>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0x60>
 1d6:	00 00       	nop

    _delay_ms(20); // Wait before LCD activation
    LCD_Command(0x02); // 4-Bit Control
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    LCD_Command(0x28); // Control Matrix @ 4-Bit
 1de:	88 e2       	ldi	r24, 0x28	; 40
 1e0:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    LCD_Command(0x0C); // Disable Cursor
 1e4:	8c e0       	ldi	r24, 0x0C	; 12
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    LCD_Command(0x06); // Move Cursor
 1ea:	86 e0       	ldi	r24, 0x06	; 6
 1ec:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    LCD_Command(0x01); // Clear LCD
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
 1f6:	83 ef       	ldi	r24, 0xF3	; 243
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <main+0x84>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x8a>
 200:	00 00       	nop
    while (1) 
    {
        // Read temperature from ADC
        //ADCSRA |= (1 << ADSC);
        //while (ADCSRA & (1 << ADSC));
        uint8_t tempValue = ADC_read(2);
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	0e 94 9a 01 	call	0x334	; 0x334 <ADC_read>
		
        float temperature =( tempValue *(5.0 / 256.0) * 100.0) ;
 208:	bc 01       	movw	r22, r24
 20a:	77 27       	eor	r23, r23
 20c:	07 2e       	mov	r0, r23
 20e:	00 0c       	add	r0, r0
 210:	88 0b       	sbc	r24, r24
 212:	99 0b       	sbc	r25, r25
 214:	0e 94 be 02 	call	0x57c	; 0x57c <__floatsisf>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	40 ea       	ldi	r20, 0xA0	; 160
 21e:	5c e3       	ldi	r21, 0x3C	; 60
 220:	0e 94 4f 03 	call	0x69e	; 0x69e <__mulsf3>
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	48 ec       	ldi	r20, 0xC8	; 200
 22a:	52 e4       	ldi	r21, 0x42	; 66
 22c:	0e 94 4f 03 	call	0x69e	; 0x69e <__mulsf3>
 230:	6b 01       	movw	r12, r22
 232:	7c 01       	movw	r14, r24

        // Control the fan
        if (temperature > 30)
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	40 ef       	ldi	r20, 0xF0	; 240
 23a:	51 e4       	ldi	r21, 0x41	; 65
 23c:	0e 94 4a 03 	call	0x694	; 0x694 <__gesf2>
 240:	18 16       	cp	r1, r24
 242:	c4 f4       	brge	.+48     	; 0x274 <main+0xfe>
        {
            OCR0A = (unsigned char)(((temperature-30.0)/(40.0-30.0))*255);   //timer 0 =8bits so 2^8
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	40 ef       	ldi	r20, 0xF0	; 240
 24a:	51 e4       	ldi	r21, 0x41	; 65
 24c:	c7 01       	movw	r24, r14
 24e:	b6 01       	movw	r22, r12
 250:	0e 94 ae 01 	call	0x35c	; 0x35c <__subsf3>
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	40 e2       	ldi	r20, 0x20	; 32
 25a:	51 e4       	ldi	r21, 0x41	; 65
 25c:	0e 94 1b 02 	call	0x436	; 0x436 <__divsf3>
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	4f e7       	ldi	r20, 0x7F	; 127
 266:	53 e4       	ldi	r21, 0x43	; 67
 268:	0e 94 4f 03 	call	0x69e	; 0x69e <__mulsf3>
 26c:	0e 94 8d 02 	call	0x51a	; 0x51a <__fixunssfsi>
 270:	67 bd       	out	0x27, r22	; 39
 272:	01 c0       	rjmp	.+2      	; 0x276 <main+0x100>
        }
        else
        {
            OCR0A = 0;
 274:	17 bc       	out	0x27, r1	; 39
        }

        // Display temperature on LCD
        LCD_Clear();
 276:	0e 94 7e 00 	call	0xfc	; 0xfc <LCD_Clear>
        uint16_t tempInt = (uint16_t)temperature; // Convert float to integer
 27a:	c7 01       	movw	r24, r14
 27c:	b6 01       	movw	r22, r12
 27e:	0e 94 8d 02 	call	0x51a	; 0x51a <__fixunssfsi>
        char tempMessage[16]; // Assuming 16 characters is enough for the temperature message
        sprintf(tempMessage, "Temp.: %d", tempInt); // Print integer part and two decimal places
 282:	7f 93       	push	r23
 284:	6f 93       	push	r22
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	9f 93       	push	r25
 28c:	8f 93       	push	r24
 28e:	8e 01       	movw	r16, r28
 290:	0f 5f       	subi	r16, 0xFF	; 255
 292:	1f 4f       	sbci	r17, 0xFF	; 255
 294:	1f 93       	push	r17
 296:	0f 93       	push	r16
 298:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <sprintf>
        LCD_Print(tempMessage);
 29c:	c8 01       	movw	r24, r16
 29e:	0e 94 8b 00 	call	0x116	; 0x116 <LCD_Print>
 2a2:	9f e3       	ldi	r25, 0x3F	; 63
 2a4:	2d e0       	ldi	r18, 0x0D	; 13
 2a6:	83 e0       	ldi	r24, 0x03	; 3
 2a8:	91 50       	subi	r25, 0x01	; 1
 2aa:	20 40       	sbci	r18, 0x00	; 0
 2ac:	80 40       	sbci	r24, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x132>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x13c>
 2b2:	00 00       	nop
        
        _delay_ms(1000);  // Wait for 1 second
    }
 2b4:	0f 90       	pop	r0
 2b6:	0f 90       	pop	r0
 2b8:	0f 90       	pop	r0
 2ba:	0f 90       	pop	r0
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	a0 cf       	rjmp	.-192    	; 0x202 <main+0x8c>

000002c2 <__vector_11>:
    return 0;
}
//auto turun off
ISR(TIMER1_COMPA_vect) // when OCR1A= TCNT1
{
 2c2:	1f 92       	push	r1
 2c4:	0f 92       	push	r0
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	0f 92       	push	r0
 2ca:	11 24       	eor	r1, r1
 2cc:	8f 93       	push	r24
 2ce:	9f 93       	push	r25
    timeCounter++;           
 2d0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 2d4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 2d8:	01 96       	adiw	r24, 0x01	; 1
 2da:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 2de:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
    if (timeCounter >= 5)     // when trun 5 the fan will be off 
 2e2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 2e6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 2ea:	05 97       	sbiw	r24, 0x05	; 5
 2ec:	40 f0       	brcs	.+16     	; 0x2fe <__vector_11+0x3c>
    {
        OCR0A = 0; 
 2ee:	17 bc       	out	0x27, r1	; 39
        PORTD &= ~(1 << FAN_PIN); // Turn off fan by clearing the FAN_PIN bit
 2f0:	8b b1       	in	r24, 0x0b	; 11
 2f2:	8f 7b       	andi	r24, 0xBF	; 191
 2f4:	8b b9       	out	0x0b, r24	; 11
        timeCounter = 0;          // Reset
 2f6:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__data_end+0x1>
 2fa:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
    }
}
 2fe:	9f 91       	pop	r25
 300:	8f 91       	pop	r24
 302:	0f 90       	pop	r0
 304:	0f be       	out	0x3f, r0	; 63
 306:	0f 90       	pop	r0
 308:	1f 90       	pop	r1
 30a:	18 95       	reti

0000030c <ADC_init>:
#include "../../LIBRARY/BITMATH.h"

void ADC_init()

{   
	SET_BIT(ADMUX,REFS0); // VCC
 30c:	ac e7       	ldi	r26, 0x7C	; 124
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	8c 91       	ld	r24, X
 312:	80 64       	ori	r24, 0x40	; 64
 314:	8c 93       	st	X, r24
	// Prescaler 64
	SET_BIT(ADCSRA,ADPS1); 
 316:	ea e7       	ldi	r30, 0x7A	; 122
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	80 81       	ld	r24, Z
 31c:	82 60       	ori	r24, 0x02	; 2
 31e:	80 83       	st	Z, r24
	SET_BIT(ADCSRA,ADPS2);
 320:	80 81       	ld	r24, Z
 322:	84 60       	ori	r24, 0x04	; 4
 324:	80 83       	st	Z, r24
	SET_BIT(ADCSRA,ADEN);  // Enable ADC
 326:	80 81       	ld	r24, Z
 328:	80 68       	ori	r24, 0x80	; 128
 32a:	80 83       	st	Z, r24
	//SET_BIT(ADMUX,MUX1); // Select channel
	SET_BIT(ADMUX,ADLAR);   // Left adjust ADC result
 32c:	8c 91       	ld	r24, X
 32e:	80 62       	ori	r24, 0x20	; 32
 330:	8c 93       	st	X, r24
 332:	08 95       	ret

00000334 <ADC_read>:
	
}

uint16_t ADC_read(uint8_t ch)
{
	ch &= 0b00000111; // Select ADC channel ch must be 0-7
 334:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8) | ch; // Clear last 3 bits and set channel
 336:	ec e7       	ldi	r30, 0x7C	; 124
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	90 81       	ld	r25, Z
 33c:	98 7f       	andi	r25, 0xF8	; 248
 33e:	89 2b       	or	r24, r25
 340:	80 83       	st	Z, r24
	SET_BIT(ADCSRA,ADSC); // Start single conversion
 342:	ea e7       	ldi	r30, 0x7A	; 122
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	80 64       	ori	r24, 0x40	; 64
 34a:	80 83       	st	Z, r24
	while (ADCSRA & (1 << ADSC)); // Wait for conversion to complete
 34c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 350:	86 fd       	sbrc	r24, 6
 352:	fc cf       	rjmp	.-8      	; 0x34c <ADC_read+0x18>
	return ADCH;
 354:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	08 95       	ret

0000035c <__subsf3>:
 35c:	50 58       	subi	r21, 0x80	; 128

0000035e <__addsf3>:
 35e:	bb 27       	eor	r27, r27
 360:	aa 27       	eor	r26, r26
 362:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3x>
 366:	0c 94 10 03 	jmp	0x620	; 0x620 <__fp_round>
 36a:	0e 94 02 03 	call	0x604	; 0x604 <__fp_pscA>
 36e:	38 f0       	brcs	.+14     	; 0x37e <__addsf3+0x20>
 370:	0e 94 09 03 	call	0x612	; 0x612 <__fp_pscB>
 374:	20 f0       	brcs	.+8      	; 0x37e <__addsf3+0x20>
 376:	39 f4       	brne	.+14     	; 0x386 <__addsf3+0x28>
 378:	9f 3f       	cpi	r25, 0xFF	; 255
 37a:	19 f4       	brne	.+6      	; 0x382 <__addsf3+0x24>
 37c:	26 f4       	brtc	.+8      	; 0x386 <__addsf3+0x28>
 37e:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_nan>
 382:	0e f4       	brtc	.+2      	; 0x386 <__addsf3+0x28>
 384:	e0 95       	com	r30
 386:	e7 fb       	bst	r30, 7
 388:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_inf>

0000038c <__addsf3x>:
 38c:	e9 2f       	mov	r30, r25
 38e:	0e 94 21 03 	call	0x642	; 0x642 <__fp_split3>
 392:	58 f3       	brcs	.-42     	; 0x36a <__addsf3+0xc>
 394:	ba 17       	cp	r27, r26
 396:	62 07       	cpc	r22, r18
 398:	73 07       	cpc	r23, r19
 39a:	84 07       	cpc	r24, r20
 39c:	95 07       	cpc	r25, r21
 39e:	20 f0       	brcs	.+8      	; 0x3a8 <__addsf3x+0x1c>
 3a0:	79 f4       	brne	.+30     	; 0x3c0 <__addsf3x+0x34>
 3a2:	a6 f5       	brtc	.+104    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3a4:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_zero>
 3a8:	0e f4       	brtc	.+2      	; 0x3ac <__addsf3x+0x20>
 3aa:	e0 95       	com	r30
 3ac:	0b 2e       	mov	r0, r27
 3ae:	ba 2f       	mov	r27, r26
 3b0:	a0 2d       	mov	r26, r0
 3b2:	0b 01       	movw	r0, r22
 3b4:	b9 01       	movw	r22, r18
 3b6:	90 01       	movw	r18, r0
 3b8:	0c 01       	movw	r0, r24
 3ba:	ca 01       	movw	r24, r20
 3bc:	a0 01       	movw	r20, r0
 3be:	11 24       	eor	r1, r1
 3c0:	ff 27       	eor	r31, r31
 3c2:	59 1b       	sub	r21, r25
 3c4:	99 f0       	breq	.+38     	; 0x3ec <__addsf3x+0x60>
 3c6:	59 3f       	cpi	r21, 0xF9	; 249
 3c8:	50 f4       	brcc	.+20     	; 0x3de <__addsf3x+0x52>
 3ca:	50 3e       	cpi	r21, 0xE0	; 224
 3cc:	68 f1       	brcs	.+90     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3ce:	1a 16       	cp	r1, r26
 3d0:	f0 40       	sbci	r31, 0x00	; 0
 3d2:	a2 2f       	mov	r26, r18
 3d4:	23 2f       	mov	r18, r19
 3d6:	34 2f       	mov	r19, r20
 3d8:	44 27       	eor	r20, r20
 3da:	58 5f       	subi	r21, 0xF8	; 248
 3dc:	f3 cf       	rjmp	.-26     	; 0x3c4 <__addsf3x+0x38>
 3de:	46 95       	lsr	r20
 3e0:	37 95       	ror	r19
 3e2:	27 95       	ror	r18
 3e4:	a7 95       	ror	r26
 3e6:	f0 40       	sbci	r31, 0x00	; 0
 3e8:	53 95       	inc	r21
 3ea:	c9 f7       	brne	.-14     	; 0x3de <__addsf3x+0x52>
 3ec:	7e f4       	brtc	.+30     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3ee:	1f 16       	cp	r1, r31
 3f0:	ba 0b       	sbc	r27, r26
 3f2:	62 0b       	sbc	r22, r18
 3f4:	73 0b       	sbc	r23, r19
 3f6:	84 0b       	sbc	r24, r20
 3f8:	ba f0       	brmi	.+46     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3fa:	91 50       	subi	r25, 0x01	; 1
 3fc:	a1 f0       	breq	.+40     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 3fe:	ff 0f       	add	r31, r31
 400:	bb 1f       	adc	r27, r27
 402:	66 1f       	adc	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	88 1f       	adc	r24, r24
 408:	c2 f7       	brpl	.-16     	; 0x3fa <__addsf3x+0x6e>
 40a:	0e c0       	rjmp	.+28     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40c:	ba 0f       	add	r27, r26
 40e:	62 1f       	adc	r22, r18
 410:	73 1f       	adc	r23, r19
 412:	84 1f       	adc	r24, r20
 414:	48 f4       	brcc	.+18     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 416:	87 95       	ror	r24
 418:	77 95       	ror	r23
 41a:	67 95       	ror	r22
 41c:	b7 95       	ror	r27
 41e:	f7 95       	ror	r31
 420:	9e 3f       	cpi	r25, 0xFE	; 254
 422:	08 f0       	brcs	.+2      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 424:	b0 cf       	rjmp	.-160    	; 0x386 <__addsf3+0x28>
 426:	93 95       	inc	r25
 428:	88 0f       	add	r24, r24
 42a:	08 f0       	brcs	.+2      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 42c:	99 27       	eor	r25, r25
 42e:	ee 0f       	add	r30, r30
 430:	97 95       	ror	r25
 432:	87 95       	ror	r24
 434:	08 95       	ret

00000436 <__divsf3>:
 436:	0e 94 2f 02 	call	0x45e	; 0x45e <__divsf3x>
 43a:	0c 94 10 03 	jmp	0x620	; 0x620 <__fp_round>
 43e:	0e 94 09 03 	call	0x612	; 0x612 <__fp_pscB>
 442:	58 f0       	brcs	.+22     	; 0x45a <__divsf3+0x24>
 444:	0e 94 02 03 	call	0x604	; 0x604 <__fp_pscA>
 448:	40 f0       	brcs	.+16     	; 0x45a <__divsf3+0x24>
 44a:	29 f4       	brne	.+10     	; 0x456 <__divsf3+0x20>
 44c:	5f 3f       	cpi	r21, 0xFF	; 255
 44e:	29 f0       	breq	.+10     	; 0x45a <__divsf3+0x24>
 450:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_inf>
 454:	51 11       	cpse	r21, r1
 456:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_szero>
 45a:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_nan>

0000045e <__divsf3x>:
 45e:	0e 94 21 03 	call	0x642	; 0x642 <__fp_split3>
 462:	68 f3       	brcs	.-38     	; 0x43e <__divsf3+0x8>

00000464 <__divsf3_pse>:
 464:	99 23       	and	r25, r25
 466:	b1 f3       	breq	.-20     	; 0x454 <__divsf3+0x1e>
 468:	55 23       	and	r21, r21
 46a:	91 f3       	breq	.-28     	; 0x450 <__divsf3+0x1a>
 46c:	95 1b       	sub	r25, r21
 46e:	55 0b       	sbc	r21, r21
 470:	bb 27       	eor	r27, r27
 472:	aa 27       	eor	r26, r26
 474:	62 17       	cp	r22, r18
 476:	73 07       	cpc	r23, r19
 478:	84 07       	cpc	r24, r20
 47a:	38 f0       	brcs	.+14     	; 0x48a <__divsf3_pse+0x26>
 47c:	9f 5f       	subi	r25, 0xFF	; 255
 47e:	5f 4f       	sbci	r21, 0xFF	; 255
 480:	22 0f       	add	r18, r18
 482:	33 1f       	adc	r19, r19
 484:	44 1f       	adc	r20, r20
 486:	aa 1f       	adc	r26, r26
 488:	a9 f3       	breq	.-22     	; 0x474 <__divsf3_pse+0x10>
 48a:	35 d0       	rcall	.+106    	; 0x4f6 <__divsf3_pse+0x92>
 48c:	0e 2e       	mov	r0, r30
 48e:	3a f0       	brmi	.+14     	; 0x49e <__divsf3_pse+0x3a>
 490:	e0 e8       	ldi	r30, 0x80	; 128
 492:	32 d0       	rcall	.+100    	; 0x4f8 <__divsf3_pse+0x94>
 494:	91 50       	subi	r25, 0x01	; 1
 496:	50 40       	sbci	r21, 0x00	; 0
 498:	e6 95       	lsr	r30
 49a:	00 1c       	adc	r0, r0
 49c:	ca f7       	brpl	.-14     	; 0x490 <__divsf3_pse+0x2c>
 49e:	2b d0       	rcall	.+86     	; 0x4f6 <__divsf3_pse+0x92>
 4a0:	fe 2f       	mov	r31, r30
 4a2:	29 d0       	rcall	.+82     	; 0x4f6 <__divsf3_pse+0x92>
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	bb 1f       	adc	r27, r27
 4ac:	26 17       	cp	r18, r22
 4ae:	37 07       	cpc	r19, r23
 4b0:	48 07       	cpc	r20, r24
 4b2:	ab 07       	cpc	r26, r27
 4b4:	b0 e8       	ldi	r27, 0x80	; 128
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__divsf3_pse+0x56>
 4b8:	bb 0b       	sbc	r27, r27
 4ba:	80 2d       	mov	r24, r0
 4bc:	bf 01       	movw	r22, r30
 4be:	ff 27       	eor	r31, r31
 4c0:	93 58       	subi	r25, 0x83	; 131
 4c2:	5f 4f       	sbci	r21, 0xFF	; 255
 4c4:	3a f0       	brmi	.+14     	; 0x4d4 <__divsf3_pse+0x70>
 4c6:	9e 3f       	cpi	r25, 0xFE	; 254
 4c8:	51 05       	cpc	r21, r1
 4ca:	78 f0       	brcs	.+30     	; 0x4ea <__divsf3_pse+0x86>
 4cc:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_inf>
 4d0:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_szero>
 4d4:	5f 3f       	cpi	r21, 0xFF	; 255
 4d6:	e4 f3       	brlt	.-8      	; 0x4d0 <__divsf3_pse+0x6c>
 4d8:	98 3e       	cpi	r25, 0xE8	; 232
 4da:	d4 f3       	brlt	.-12     	; 0x4d0 <__divsf3_pse+0x6c>
 4dc:	86 95       	lsr	r24
 4de:	77 95       	ror	r23
 4e0:	67 95       	ror	r22
 4e2:	b7 95       	ror	r27
 4e4:	f7 95       	ror	r31
 4e6:	9f 5f       	subi	r25, 0xFF	; 255
 4e8:	c9 f7       	brne	.-14     	; 0x4dc <__divsf3_pse+0x78>
 4ea:	88 0f       	add	r24, r24
 4ec:	91 1d       	adc	r25, r1
 4ee:	96 95       	lsr	r25
 4f0:	87 95       	ror	r24
 4f2:	97 f9       	bld	r25, 7
 4f4:	08 95       	ret
 4f6:	e1 e0       	ldi	r30, 0x01	; 1
 4f8:	66 0f       	add	r22, r22
 4fa:	77 1f       	adc	r23, r23
 4fc:	88 1f       	adc	r24, r24
 4fe:	bb 1f       	adc	r27, r27
 500:	62 17       	cp	r22, r18
 502:	73 07       	cpc	r23, r19
 504:	84 07       	cpc	r24, r20
 506:	ba 07       	cpc	r27, r26
 508:	20 f0       	brcs	.+8      	; 0x512 <__divsf3_pse+0xae>
 50a:	62 1b       	sub	r22, r18
 50c:	73 0b       	sbc	r23, r19
 50e:	84 0b       	sbc	r24, r20
 510:	ba 0b       	sbc	r27, r26
 512:	ee 1f       	adc	r30, r30
 514:	88 f7       	brcc	.-30     	; 0x4f8 <__divsf3_pse+0x94>
 516:	e0 95       	com	r30
 518:	08 95       	ret

0000051a <__fixunssfsi>:
 51a:	0e 94 29 03 	call	0x652	; 0x652 <__fp_splitA>
 51e:	88 f0       	brcs	.+34     	; 0x542 <__fixunssfsi+0x28>
 520:	9f 57       	subi	r25, 0x7F	; 127
 522:	98 f0       	brcs	.+38     	; 0x54a <__fixunssfsi+0x30>
 524:	b9 2f       	mov	r27, r25
 526:	99 27       	eor	r25, r25
 528:	b7 51       	subi	r27, 0x17	; 23
 52a:	b0 f0       	brcs	.+44     	; 0x558 <__fixunssfsi+0x3e>
 52c:	e1 f0       	breq	.+56     	; 0x566 <__fixunssfsi+0x4c>
 52e:	66 0f       	add	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	99 1f       	adc	r25, r25
 536:	1a f0       	brmi	.+6      	; 0x53e <__fixunssfsi+0x24>
 538:	ba 95       	dec	r27
 53a:	c9 f7       	brne	.-14     	; 0x52e <__fixunssfsi+0x14>
 53c:	14 c0       	rjmp	.+40     	; 0x566 <__fixunssfsi+0x4c>
 53e:	b1 30       	cpi	r27, 0x01	; 1
 540:	91 f0       	breq	.+36     	; 0x566 <__fixunssfsi+0x4c>
 542:	0e 94 43 03 	call	0x686	; 0x686 <__fp_zero>
 546:	b1 e0       	ldi	r27, 0x01	; 1
 548:	08 95       	ret
 54a:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_zero>
 54e:	67 2f       	mov	r22, r23
 550:	78 2f       	mov	r23, r24
 552:	88 27       	eor	r24, r24
 554:	b8 5f       	subi	r27, 0xF8	; 248
 556:	39 f0       	breq	.+14     	; 0x566 <__fixunssfsi+0x4c>
 558:	b9 3f       	cpi	r27, 0xF9	; 249
 55a:	cc f3       	brlt	.-14     	; 0x54e <__fixunssfsi+0x34>
 55c:	86 95       	lsr	r24
 55e:	77 95       	ror	r23
 560:	67 95       	ror	r22
 562:	b3 95       	inc	r27
 564:	d9 f7       	brne	.-10     	; 0x55c <__fixunssfsi+0x42>
 566:	3e f4       	brtc	.+14     	; 0x576 <__fixunssfsi+0x5c>
 568:	90 95       	com	r25
 56a:	80 95       	com	r24
 56c:	70 95       	com	r23
 56e:	61 95       	neg	r22
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	08 95       	ret

00000578 <__floatunsisf>:
 578:	e8 94       	clt
 57a:	09 c0       	rjmp	.+18     	; 0x58e <__floatsisf+0x12>

0000057c <__floatsisf>:
 57c:	97 fb       	bst	r25, 7
 57e:	3e f4       	brtc	.+14     	; 0x58e <__floatsisf+0x12>
 580:	90 95       	com	r25
 582:	80 95       	com	r24
 584:	70 95       	com	r23
 586:	61 95       	neg	r22
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	99 23       	and	r25, r25
 590:	a9 f0       	breq	.+42     	; 0x5bc <__floatsisf+0x40>
 592:	f9 2f       	mov	r31, r25
 594:	96 e9       	ldi	r25, 0x96	; 150
 596:	bb 27       	eor	r27, r27
 598:	93 95       	inc	r25
 59a:	f6 95       	lsr	r31
 59c:	87 95       	ror	r24
 59e:	77 95       	ror	r23
 5a0:	67 95       	ror	r22
 5a2:	b7 95       	ror	r27
 5a4:	f1 11       	cpse	r31, r1
 5a6:	f8 cf       	rjmp	.-16     	; 0x598 <__floatsisf+0x1c>
 5a8:	fa f4       	brpl	.+62     	; 0x5e8 <__floatsisf+0x6c>
 5aa:	bb 0f       	add	r27, r27
 5ac:	11 f4       	brne	.+4      	; 0x5b2 <__floatsisf+0x36>
 5ae:	60 ff       	sbrs	r22, 0
 5b0:	1b c0       	rjmp	.+54     	; 0x5e8 <__floatsisf+0x6c>
 5b2:	6f 5f       	subi	r22, 0xFF	; 255
 5b4:	7f 4f       	sbci	r23, 0xFF	; 255
 5b6:	8f 4f       	sbci	r24, 0xFF	; 255
 5b8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ba:	16 c0       	rjmp	.+44     	; 0x5e8 <__floatsisf+0x6c>
 5bc:	88 23       	and	r24, r24
 5be:	11 f0       	breq	.+4      	; 0x5c4 <__floatsisf+0x48>
 5c0:	96 e9       	ldi	r25, 0x96	; 150
 5c2:	11 c0       	rjmp	.+34     	; 0x5e6 <__floatsisf+0x6a>
 5c4:	77 23       	and	r23, r23
 5c6:	21 f0       	breq	.+8      	; 0x5d0 <__floatsisf+0x54>
 5c8:	9e e8       	ldi	r25, 0x8E	; 142
 5ca:	87 2f       	mov	r24, r23
 5cc:	76 2f       	mov	r23, r22
 5ce:	05 c0       	rjmp	.+10     	; 0x5da <__floatsisf+0x5e>
 5d0:	66 23       	and	r22, r22
 5d2:	71 f0       	breq	.+28     	; 0x5f0 <__floatsisf+0x74>
 5d4:	96 e8       	ldi	r25, 0x86	; 134
 5d6:	86 2f       	mov	r24, r22
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	60 e0       	ldi	r22, 0x00	; 0
 5dc:	2a f0       	brmi	.+10     	; 0x5e8 <__floatsisf+0x6c>
 5de:	9a 95       	dec	r25
 5e0:	66 0f       	add	r22, r22
 5e2:	77 1f       	adc	r23, r23
 5e4:	88 1f       	adc	r24, r24
 5e6:	da f7       	brpl	.-10     	; 0x5de <__floatsisf+0x62>
 5e8:	88 0f       	add	r24, r24
 5ea:	96 95       	lsr	r25
 5ec:	87 95       	ror	r24
 5ee:	97 f9       	bld	r25, 7
 5f0:	08 95       	ret

000005f2 <__fp_inf>:
 5f2:	97 f9       	bld	r25, 7
 5f4:	9f 67       	ori	r25, 0x7F	; 127
 5f6:	80 e8       	ldi	r24, 0x80	; 128
 5f8:	70 e0       	ldi	r23, 0x00	; 0
 5fa:	60 e0       	ldi	r22, 0x00	; 0
 5fc:	08 95       	ret

000005fe <__fp_nan>:
 5fe:	9f ef       	ldi	r25, 0xFF	; 255
 600:	80 ec       	ldi	r24, 0xC0	; 192
 602:	08 95       	ret

00000604 <__fp_pscA>:
 604:	00 24       	eor	r0, r0
 606:	0a 94       	dec	r0
 608:	16 16       	cp	r1, r22
 60a:	17 06       	cpc	r1, r23
 60c:	18 06       	cpc	r1, r24
 60e:	09 06       	cpc	r0, r25
 610:	08 95       	ret

00000612 <__fp_pscB>:
 612:	00 24       	eor	r0, r0
 614:	0a 94       	dec	r0
 616:	12 16       	cp	r1, r18
 618:	13 06       	cpc	r1, r19
 61a:	14 06       	cpc	r1, r20
 61c:	05 06       	cpc	r0, r21
 61e:	08 95       	ret

00000620 <__fp_round>:
 620:	09 2e       	mov	r0, r25
 622:	03 94       	inc	r0
 624:	00 0c       	add	r0, r0
 626:	11 f4       	brne	.+4      	; 0x62c <__fp_round+0xc>
 628:	88 23       	and	r24, r24
 62a:	52 f0       	brmi	.+20     	; 0x640 <__fp_round+0x20>
 62c:	bb 0f       	add	r27, r27
 62e:	40 f4       	brcc	.+16     	; 0x640 <__fp_round+0x20>
 630:	bf 2b       	or	r27, r31
 632:	11 f4       	brne	.+4      	; 0x638 <__fp_round+0x18>
 634:	60 ff       	sbrs	r22, 0
 636:	04 c0       	rjmp	.+8      	; 0x640 <__fp_round+0x20>
 638:	6f 5f       	subi	r22, 0xFF	; 255
 63a:	7f 4f       	sbci	r23, 0xFF	; 255
 63c:	8f 4f       	sbci	r24, 0xFF	; 255
 63e:	9f 4f       	sbci	r25, 0xFF	; 255
 640:	08 95       	ret

00000642 <__fp_split3>:
 642:	57 fd       	sbrc	r21, 7
 644:	90 58       	subi	r25, 0x80	; 128
 646:	44 0f       	add	r20, r20
 648:	55 1f       	adc	r21, r21
 64a:	59 f0       	breq	.+22     	; 0x662 <__fp_splitA+0x10>
 64c:	5f 3f       	cpi	r21, 0xFF	; 255
 64e:	71 f0       	breq	.+28     	; 0x66c <__fp_splitA+0x1a>
 650:	47 95       	ror	r20

00000652 <__fp_splitA>:
 652:	88 0f       	add	r24, r24
 654:	97 fb       	bst	r25, 7
 656:	99 1f       	adc	r25, r25
 658:	61 f0       	breq	.+24     	; 0x672 <__fp_splitA+0x20>
 65a:	9f 3f       	cpi	r25, 0xFF	; 255
 65c:	79 f0       	breq	.+30     	; 0x67c <__fp_splitA+0x2a>
 65e:	87 95       	ror	r24
 660:	08 95       	ret
 662:	12 16       	cp	r1, r18
 664:	13 06       	cpc	r1, r19
 666:	14 06       	cpc	r1, r20
 668:	55 1f       	adc	r21, r21
 66a:	f2 cf       	rjmp	.-28     	; 0x650 <__fp_split3+0xe>
 66c:	46 95       	lsr	r20
 66e:	f1 df       	rcall	.-30     	; 0x652 <__fp_splitA>
 670:	08 c0       	rjmp	.+16     	; 0x682 <__fp_splitA+0x30>
 672:	16 16       	cp	r1, r22
 674:	17 06       	cpc	r1, r23
 676:	18 06       	cpc	r1, r24
 678:	99 1f       	adc	r25, r25
 67a:	f1 cf       	rjmp	.-30     	; 0x65e <__fp_splitA+0xc>
 67c:	86 95       	lsr	r24
 67e:	71 05       	cpc	r23, r1
 680:	61 05       	cpc	r22, r1
 682:	08 94       	sec
 684:	08 95       	ret

00000686 <__fp_zero>:
 686:	e8 94       	clt

00000688 <__fp_szero>:
 688:	bb 27       	eor	r27, r27
 68a:	66 27       	eor	r22, r22
 68c:	77 27       	eor	r23, r23
 68e:	cb 01       	movw	r24, r22
 690:	97 f9       	bld	r25, 7
 692:	08 95       	ret

00000694 <__gesf2>:
 694:	0e 94 bc 03 	call	0x778	; 0x778 <__fp_cmp>
 698:	08 f4       	brcc	.+2      	; 0x69c <__gesf2+0x8>
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	08 95       	ret

0000069e <__mulsf3>:
 69e:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3x>
 6a2:	0c 94 10 03 	jmp	0x620	; 0x620 <__fp_round>
 6a6:	0e 94 02 03 	call	0x604	; 0x604 <__fp_pscA>
 6aa:	38 f0       	brcs	.+14     	; 0x6ba <__mulsf3+0x1c>
 6ac:	0e 94 09 03 	call	0x612	; 0x612 <__fp_pscB>
 6b0:	20 f0       	brcs	.+8      	; 0x6ba <__mulsf3+0x1c>
 6b2:	95 23       	and	r25, r21
 6b4:	11 f0       	breq	.+4      	; 0x6ba <__mulsf3+0x1c>
 6b6:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_inf>
 6ba:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_nan>
 6be:	11 24       	eor	r1, r1
 6c0:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_szero>

000006c4 <__mulsf3x>:
 6c4:	0e 94 21 03 	call	0x642	; 0x642 <__fp_split3>
 6c8:	70 f3       	brcs	.-36     	; 0x6a6 <__mulsf3+0x8>

000006ca <__mulsf3_pse>:
 6ca:	95 9f       	mul	r25, r21
 6cc:	c1 f3       	breq	.-16     	; 0x6be <__mulsf3+0x20>
 6ce:	95 0f       	add	r25, r21
 6d0:	50 e0       	ldi	r21, 0x00	; 0
 6d2:	55 1f       	adc	r21, r21
 6d4:	62 9f       	mul	r22, r18
 6d6:	f0 01       	movw	r30, r0
 6d8:	72 9f       	mul	r23, r18
 6da:	bb 27       	eor	r27, r27
 6dc:	f0 0d       	add	r31, r0
 6de:	b1 1d       	adc	r27, r1
 6e0:	63 9f       	mul	r22, r19
 6e2:	aa 27       	eor	r26, r26
 6e4:	f0 0d       	add	r31, r0
 6e6:	b1 1d       	adc	r27, r1
 6e8:	aa 1f       	adc	r26, r26
 6ea:	64 9f       	mul	r22, r20
 6ec:	66 27       	eor	r22, r22
 6ee:	b0 0d       	add	r27, r0
 6f0:	a1 1d       	adc	r26, r1
 6f2:	66 1f       	adc	r22, r22
 6f4:	82 9f       	mul	r24, r18
 6f6:	22 27       	eor	r18, r18
 6f8:	b0 0d       	add	r27, r0
 6fa:	a1 1d       	adc	r26, r1
 6fc:	62 1f       	adc	r22, r18
 6fe:	73 9f       	mul	r23, r19
 700:	b0 0d       	add	r27, r0
 702:	a1 1d       	adc	r26, r1
 704:	62 1f       	adc	r22, r18
 706:	83 9f       	mul	r24, r19
 708:	a0 0d       	add	r26, r0
 70a:	61 1d       	adc	r22, r1
 70c:	22 1f       	adc	r18, r18
 70e:	74 9f       	mul	r23, r20
 710:	33 27       	eor	r19, r19
 712:	a0 0d       	add	r26, r0
 714:	61 1d       	adc	r22, r1
 716:	23 1f       	adc	r18, r19
 718:	84 9f       	mul	r24, r20
 71a:	60 0d       	add	r22, r0
 71c:	21 1d       	adc	r18, r1
 71e:	82 2f       	mov	r24, r18
 720:	76 2f       	mov	r23, r22
 722:	6a 2f       	mov	r22, r26
 724:	11 24       	eor	r1, r1
 726:	9f 57       	subi	r25, 0x7F	; 127
 728:	50 40       	sbci	r21, 0x00	; 0
 72a:	9a f0       	brmi	.+38     	; 0x752 <__mulsf3_pse+0x88>
 72c:	f1 f0       	breq	.+60     	; 0x76a <__mulsf3_pse+0xa0>
 72e:	88 23       	and	r24, r24
 730:	4a f0       	brmi	.+18     	; 0x744 <__mulsf3_pse+0x7a>
 732:	ee 0f       	add	r30, r30
 734:	ff 1f       	adc	r31, r31
 736:	bb 1f       	adc	r27, r27
 738:	66 1f       	adc	r22, r22
 73a:	77 1f       	adc	r23, r23
 73c:	88 1f       	adc	r24, r24
 73e:	91 50       	subi	r25, 0x01	; 1
 740:	50 40       	sbci	r21, 0x00	; 0
 742:	a9 f7       	brne	.-22     	; 0x72e <__mulsf3_pse+0x64>
 744:	9e 3f       	cpi	r25, 0xFE	; 254
 746:	51 05       	cpc	r21, r1
 748:	80 f0       	brcs	.+32     	; 0x76a <__mulsf3_pse+0xa0>
 74a:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_inf>
 74e:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_szero>
 752:	5f 3f       	cpi	r21, 0xFF	; 255
 754:	e4 f3       	brlt	.-8      	; 0x74e <__mulsf3_pse+0x84>
 756:	98 3e       	cpi	r25, 0xE8	; 232
 758:	d4 f3       	brlt	.-12     	; 0x74e <__mulsf3_pse+0x84>
 75a:	86 95       	lsr	r24
 75c:	77 95       	ror	r23
 75e:	67 95       	ror	r22
 760:	b7 95       	ror	r27
 762:	f7 95       	ror	r31
 764:	e7 95       	ror	r30
 766:	9f 5f       	subi	r25, 0xFF	; 255
 768:	c1 f7       	brne	.-16     	; 0x75a <__mulsf3_pse+0x90>
 76a:	fe 2b       	or	r31, r30
 76c:	88 0f       	add	r24, r24
 76e:	91 1d       	adc	r25, r1
 770:	96 95       	lsr	r25
 772:	87 95       	ror	r24
 774:	97 f9       	bld	r25, 7
 776:	08 95       	ret

00000778 <__fp_cmp>:
 778:	99 0f       	add	r25, r25
 77a:	00 08       	sbc	r0, r0
 77c:	55 0f       	add	r21, r21
 77e:	aa 0b       	sbc	r26, r26
 780:	e0 e8       	ldi	r30, 0x80	; 128
 782:	fe ef       	ldi	r31, 0xFE	; 254
 784:	16 16       	cp	r1, r22
 786:	17 06       	cpc	r1, r23
 788:	e8 07       	cpc	r30, r24
 78a:	f9 07       	cpc	r31, r25
 78c:	c0 f0       	brcs	.+48     	; 0x7be <__fp_cmp+0x46>
 78e:	12 16       	cp	r1, r18
 790:	13 06       	cpc	r1, r19
 792:	e4 07       	cpc	r30, r20
 794:	f5 07       	cpc	r31, r21
 796:	98 f0       	brcs	.+38     	; 0x7be <__fp_cmp+0x46>
 798:	62 1b       	sub	r22, r18
 79a:	73 0b       	sbc	r23, r19
 79c:	84 0b       	sbc	r24, r20
 79e:	95 0b       	sbc	r25, r21
 7a0:	39 f4       	brne	.+14     	; 0x7b0 <__fp_cmp+0x38>
 7a2:	0a 26       	eor	r0, r26
 7a4:	61 f0       	breq	.+24     	; 0x7be <__fp_cmp+0x46>
 7a6:	23 2b       	or	r18, r19
 7a8:	24 2b       	or	r18, r20
 7aa:	25 2b       	or	r18, r21
 7ac:	21 f4       	brne	.+8      	; 0x7b6 <__fp_cmp+0x3e>
 7ae:	08 95       	ret
 7b0:	0a 26       	eor	r0, r26
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <__fp_cmp+0x3e>
 7b4:	a1 40       	sbci	r26, 0x01	; 1
 7b6:	a6 95       	lsr	r26
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	81 1d       	adc	r24, r1
 7bc:	81 1d       	adc	r24, r1
 7be:	08 95       	ret

000007c0 <sprintf>:
 7c0:	ae e0       	ldi	r26, 0x0E	; 14
 7c2:	b0 e0       	ldi	r27, 0x00	; 0
 7c4:	e6 ee       	ldi	r30, 0xE6	; 230
 7c6:	f3 e0       	ldi	r31, 0x03	; 3
 7c8:	0c 94 a1 06 	jmp	0xd42	; 0xd42 <__prologue_saves__+0x1c>
 7cc:	0d 89       	ldd	r16, Y+21	; 0x15
 7ce:	1e 89       	ldd	r17, Y+22	; 0x16
 7d0:	86 e0       	ldi	r24, 0x06	; 6
 7d2:	8c 83       	std	Y+4, r24	; 0x04
 7d4:	1a 83       	std	Y+2, r17	; 0x02
 7d6:	09 83       	std	Y+1, r16	; 0x01
 7d8:	8f ef       	ldi	r24, 0xFF	; 255
 7da:	9f e7       	ldi	r25, 0x7F	; 127
 7dc:	9e 83       	std	Y+6, r25	; 0x06
 7de:	8d 83       	std	Y+5, r24	; 0x05
 7e0:	ae 01       	movw	r20, r28
 7e2:	47 5e       	subi	r20, 0xE7	; 231
 7e4:	5f 4f       	sbci	r21, 0xFF	; 255
 7e6:	6f 89       	ldd	r22, Y+23	; 0x17
 7e8:	78 8d       	ldd	r23, Y+24	; 0x18
 7ea:	ce 01       	movw	r24, r28
 7ec:	01 96       	adiw	r24, 0x01	; 1
 7ee:	0e 94 02 04 	call	0x804	; 0x804 <vfprintf>
 7f2:	ef 81       	ldd	r30, Y+7	; 0x07
 7f4:	f8 85       	ldd	r31, Y+8	; 0x08
 7f6:	e0 0f       	add	r30, r16
 7f8:	f1 1f       	adc	r31, r17
 7fa:	10 82       	st	Z, r1
 7fc:	2e 96       	adiw	r28, 0x0e	; 14
 7fe:	e4 e0       	ldi	r30, 0x04	; 4
 800:	0c 94 bd 06 	jmp	0xd7a	; 0xd7a <__epilogue_restores__+0x1c>

00000804 <vfprintf>:
 804:	ab e0       	ldi	r26, 0x0B	; 11
 806:	b0 e0       	ldi	r27, 0x00	; 0
 808:	e8 e0       	ldi	r30, 0x08	; 8
 80a:	f4 e0       	ldi	r31, 0x04	; 4
 80c:	0c 94 93 06 	jmp	0xd26	; 0xd26 <__prologue_saves__>
 810:	6c 01       	movw	r12, r24
 812:	7b 01       	movw	r14, r22
 814:	8a 01       	movw	r16, r20
 816:	fc 01       	movw	r30, r24
 818:	17 82       	std	Z+7, r1	; 0x07
 81a:	16 82       	std	Z+6, r1	; 0x06
 81c:	83 81       	ldd	r24, Z+3	; 0x03
 81e:	81 ff       	sbrs	r24, 1
 820:	cc c1       	rjmp	.+920    	; 0xbba <__stack+0x2bb>
 822:	ce 01       	movw	r24, r28
 824:	01 96       	adiw	r24, 0x01	; 1
 826:	3c 01       	movw	r6, r24
 828:	f6 01       	movw	r30, r12
 82a:	93 81       	ldd	r25, Z+3	; 0x03
 82c:	f7 01       	movw	r30, r14
 82e:	93 fd       	sbrc	r25, 3
 830:	85 91       	lpm	r24, Z+
 832:	93 ff       	sbrs	r25, 3
 834:	81 91       	ld	r24, Z+
 836:	7f 01       	movw	r14, r30
 838:	88 23       	and	r24, r24
 83a:	09 f4       	brne	.+2      	; 0x83e <vfprintf+0x3a>
 83c:	ba c1       	rjmp	.+884    	; 0xbb2 <__stack+0x2b3>
 83e:	85 32       	cpi	r24, 0x25	; 37
 840:	39 f4       	brne	.+14     	; 0x850 <vfprintf+0x4c>
 842:	93 fd       	sbrc	r25, 3
 844:	85 91       	lpm	r24, Z+
 846:	93 ff       	sbrs	r25, 3
 848:	81 91       	ld	r24, Z+
 84a:	7f 01       	movw	r14, r30
 84c:	85 32       	cpi	r24, 0x25	; 37
 84e:	29 f4       	brne	.+10     	; 0x85a <vfprintf+0x56>
 850:	b6 01       	movw	r22, r12
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 858:	e7 cf       	rjmp	.-50     	; 0x828 <vfprintf+0x24>
 85a:	91 2c       	mov	r9, r1
 85c:	21 2c       	mov	r2, r1
 85e:	31 2c       	mov	r3, r1
 860:	ff e1       	ldi	r31, 0x1F	; 31
 862:	f3 15       	cp	r31, r3
 864:	d8 f0       	brcs	.+54     	; 0x89c <vfprintf+0x98>
 866:	8b 32       	cpi	r24, 0x2B	; 43
 868:	79 f0       	breq	.+30     	; 0x888 <vfprintf+0x84>
 86a:	38 f4       	brcc	.+14     	; 0x87a <vfprintf+0x76>
 86c:	80 32       	cpi	r24, 0x20	; 32
 86e:	79 f0       	breq	.+30     	; 0x88e <vfprintf+0x8a>
 870:	83 32       	cpi	r24, 0x23	; 35
 872:	a1 f4       	brne	.+40     	; 0x89c <vfprintf+0x98>
 874:	23 2d       	mov	r18, r3
 876:	20 61       	ori	r18, 0x10	; 16
 878:	1d c0       	rjmp	.+58     	; 0x8b4 <vfprintf+0xb0>
 87a:	8d 32       	cpi	r24, 0x2D	; 45
 87c:	61 f0       	breq	.+24     	; 0x896 <vfprintf+0x92>
 87e:	80 33       	cpi	r24, 0x30	; 48
 880:	69 f4       	brne	.+26     	; 0x89c <vfprintf+0x98>
 882:	23 2d       	mov	r18, r3
 884:	21 60       	ori	r18, 0x01	; 1
 886:	16 c0       	rjmp	.+44     	; 0x8b4 <vfprintf+0xb0>
 888:	83 2d       	mov	r24, r3
 88a:	82 60       	ori	r24, 0x02	; 2
 88c:	38 2e       	mov	r3, r24
 88e:	e3 2d       	mov	r30, r3
 890:	e4 60       	ori	r30, 0x04	; 4
 892:	3e 2e       	mov	r3, r30
 894:	2a c0       	rjmp	.+84     	; 0x8ea <vfprintf+0xe6>
 896:	f3 2d       	mov	r31, r3
 898:	f8 60       	ori	r31, 0x08	; 8
 89a:	1d c0       	rjmp	.+58     	; 0x8d6 <vfprintf+0xd2>
 89c:	37 fc       	sbrc	r3, 7
 89e:	2d c0       	rjmp	.+90     	; 0x8fa <vfprintf+0xf6>
 8a0:	20 ed       	ldi	r18, 0xD0	; 208
 8a2:	28 0f       	add	r18, r24
 8a4:	2a 30       	cpi	r18, 0x0A	; 10
 8a6:	40 f0       	brcs	.+16     	; 0x8b8 <vfprintf+0xb4>
 8a8:	8e 32       	cpi	r24, 0x2E	; 46
 8aa:	b9 f4       	brne	.+46     	; 0x8da <vfprintf+0xd6>
 8ac:	36 fc       	sbrc	r3, 6
 8ae:	81 c1       	rjmp	.+770    	; 0xbb2 <__stack+0x2b3>
 8b0:	23 2d       	mov	r18, r3
 8b2:	20 64       	ori	r18, 0x40	; 64
 8b4:	32 2e       	mov	r3, r18
 8b6:	19 c0       	rjmp	.+50     	; 0x8ea <vfprintf+0xe6>
 8b8:	36 fe       	sbrs	r3, 6
 8ba:	06 c0       	rjmp	.+12     	; 0x8c8 <vfprintf+0xc4>
 8bc:	8a e0       	ldi	r24, 0x0A	; 10
 8be:	98 9e       	mul	r9, r24
 8c0:	20 0d       	add	r18, r0
 8c2:	11 24       	eor	r1, r1
 8c4:	92 2e       	mov	r9, r18
 8c6:	11 c0       	rjmp	.+34     	; 0x8ea <vfprintf+0xe6>
 8c8:	ea e0       	ldi	r30, 0x0A	; 10
 8ca:	2e 9e       	mul	r2, r30
 8cc:	20 0d       	add	r18, r0
 8ce:	11 24       	eor	r1, r1
 8d0:	22 2e       	mov	r2, r18
 8d2:	f3 2d       	mov	r31, r3
 8d4:	f0 62       	ori	r31, 0x20	; 32
 8d6:	3f 2e       	mov	r3, r31
 8d8:	08 c0       	rjmp	.+16     	; 0x8ea <vfprintf+0xe6>
 8da:	8c 36       	cpi	r24, 0x6C	; 108
 8dc:	21 f4       	brne	.+8      	; 0x8e6 <vfprintf+0xe2>
 8de:	83 2d       	mov	r24, r3
 8e0:	80 68       	ori	r24, 0x80	; 128
 8e2:	38 2e       	mov	r3, r24
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <vfprintf+0xe6>
 8e6:	88 36       	cpi	r24, 0x68	; 104
 8e8:	41 f4       	brne	.+16     	; 0x8fa <vfprintf+0xf6>
 8ea:	f7 01       	movw	r30, r14
 8ec:	93 fd       	sbrc	r25, 3
 8ee:	85 91       	lpm	r24, Z+
 8f0:	93 ff       	sbrs	r25, 3
 8f2:	81 91       	ld	r24, Z+
 8f4:	7f 01       	movw	r14, r30
 8f6:	81 11       	cpse	r24, r1
 8f8:	b3 cf       	rjmp	.-154    	; 0x860 <vfprintf+0x5c>
 8fa:	98 2f       	mov	r25, r24
 8fc:	9f 7d       	andi	r25, 0xDF	; 223
 8fe:	95 54       	subi	r25, 0x45	; 69
 900:	93 30       	cpi	r25, 0x03	; 3
 902:	28 f4       	brcc	.+10     	; 0x90e <__stack+0xf>
 904:	0c 5f       	subi	r16, 0xFC	; 252
 906:	1f 4f       	sbci	r17, 0xFF	; 255
 908:	9f e3       	ldi	r25, 0x3F	; 63
 90a:	99 83       	std	Y+1, r25	; 0x01
 90c:	0d c0       	rjmp	.+26     	; 0x928 <__stack+0x29>
 90e:	83 36       	cpi	r24, 0x63	; 99
 910:	31 f0       	breq	.+12     	; 0x91e <__stack+0x1f>
 912:	83 37       	cpi	r24, 0x73	; 115
 914:	71 f0       	breq	.+28     	; 0x932 <__stack+0x33>
 916:	83 35       	cpi	r24, 0x53	; 83
 918:	09 f0       	breq	.+2      	; 0x91c <__stack+0x1d>
 91a:	59 c0       	rjmp	.+178    	; 0x9ce <__stack+0xcf>
 91c:	21 c0       	rjmp	.+66     	; 0x960 <__stack+0x61>
 91e:	f8 01       	movw	r30, r16
 920:	80 81       	ld	r24, Z
 922:	89 83       	std	Y+1, r24	; 0x01
 924:	0e 5f       	subi	r16, 0xFE	; 254
 926:	1f 4f       	sbci	r17, 0xFF	; 255
 928:	88 24       	eor	r8, r8
 92a:	83 94       	inc	r8
 92c:	91 2c       	mov	r9, r1
 92e:	53 01       	movw	r10, r6
 930:	13 c0       	rjmp	.+38     	; 0x958 <__stack+0x59>
 932:	28 01       	movw	r4, r16
 934:	f2 e0       	ldi	r31, 0x02	; 2
 936:	4f 0e       	add	r4, r31
 938:	51 1c       	adc	r5, r1
 93a:	f8 01       	movw	r30, r16
 93c:	a0 80       	ld	r10, Z
 93e:	b1 80       	ldd	r11, Z+1	; 0x01
 940:	36 fe       	sbrs	r3, 6
 942:	03 c0       	rjmp	.+6      	; 0x94a <__stack+0x4b>
 944:	69 2d       	mov	r22, r9
 946:	70 e0       	ldi	r23, 0x00	; 0
 948:	02 c0       	rjmp	.+4      	; 0x94e <__stack+0x4f>
 94a:	6f ef       	ldi	r22, 0xFF	; 255
 94c:	7f ef       	ldi	r23, 0xFF	; 255
 94e:	c5 01       	movw	r24, r10
 950:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strnlen>
 954:	4c 01       	movw	r8, r24
 956:	82 01       	movw	r16, r4
 958:	f3 2d       	mov	r31, r3
 95a:	ff 77       	andi	r31, 0x7F	; 127
 95c:	3f 2e       	mov	r3, r31
 95e:	16 c0       	rjmp	.+44     	; 0x98c <__stack+0x8d>
 960:	28 01       	movw	r4, r16
 962:	22 e0       	ldi	r18, 0x02	; 2
 964:	42 0e       	add	r4, r18
 966:	51 1c       	adc	r5, r1
 968:	f8 01       	movw	r30, r16
 96a:	a0 80       	ld	r10, Z
 96c:	b1 80       	ldd	r11, Z+1	; 0x01
 96e:	36 fe       	sbrs	r3, 6
 970:	03 c0       	rjmp	.+6      	; 0x978 <__stack+0x79>
 972:	69 2d       	mov	r22, r9
 974:	70 e0       	ldi	r23, 0x00	; 0
 976:	02 c0       	rjmp	.+4      	; 0x97c <__stack+0x7d>
 978:	6f ef       	ldi	r22, 0xFF	; 255
 97a:	7f ef       	ldi	r23, 0xFF	; 255
 97c:	c5 01       	movw	r24, r10
 97e:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <strnlen_P>
 982:	4c 01       	movw	r8, r24
 984:	f3 2d       	mov	r31, r3
 986:	f0 68       	ori	r31, 0x80	; 128
 988:	3f 2e       	mov	r3, r31
 98a:	82 01       	movw	r16, r4
 98c:	33 fc       	sbrc	r3, 3
 98e:	1b c0       	rjmp	.+54     	; 0x9c6 <__stack+0xc7>
 990:	82 2d       	mov	r24, r2
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	88 16       	cp	r8, r24
 996:	99 06       	cpc	r9, r25
 998:	b0 f4       	brcc	.+44     	; 0x9c6 <__stack+0xc7>
 99a:	b6 01       	movw	r22, r12
 99c:	80 e2       	ldi	r24, 0x20	; 32
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 9a4:	2a 94       	dec	r2
 9a6:	f4 cf       	rjmp	.-24     	; 0x990 <__stack+0x91>
 9a8:	f5 01       	movw	r30, r10
 9aa:	37 fc       	sbrc	r3, 7
 9ac:	85 91       	lpm	r24, Z+
 9ae:	37 fe       	sbrs	r3, 7
 9b0:	81 91       	ld	r24, Z+
 9b2:	5f 01       	movw	r10, r30
 9b4:	b6 01       	movw	r22, r12
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 9bc:	21 10       	cpse	r2, r1
 9be:	2a 94       	dec	r2
 9c0:	21 e0       	ldi	r18, 0x01	; 1
 9c2:	82 1a       	sub	r8, r18
 9c4:	91 08       	sbc	r9, r1
 9c6:	81 14       	cp	r8, r1
 9c8:	91 04       	cpc	r9, r1
 9ca:	71 f7       	brne	.-36     	; 0x9a8 <__stack+0xa9>
 9cc:	e8 c0       	rjmp	.+464    	; 0xb9e <__stack+0x29f>
 9ce:	84 36       	cpi	r24, 0x64	; 100
 9d0:	11 f0       	breq	.+4      	; 0x9d6 <__stack+0xd7>
 9d2:	89 36       	cpi	r24, 0x69	; 105
 9d4:	41 f5       	brne	.+80     	; 0xa26 <__stack+0x127>
 9d6:	f8 01       	movw	r30, r16
 9d8:	37 fe       	sbrs	r3, 7
 9da:	07 c0       	rjmp	.+14     	; 0x9ea <__stack+0xeb>
 9dc:	60 81       	ld	r22, Z
 9de:	71 81       	ldd	r23, Z+1	; 0x01
 9e0:	82 81       	ldd	r24, Z+2	; 0x02
 9e2:	93 81       	ldd	r25, Z+3	; 0x03
 9e4:	0c 5f       	subi	r16, 0xFC	; 252
 9e6:	1f 4f       	sbci	r17, 0xFF	; 255
 9e8:	08 c0       	rjmp	.+16     	; 0x9fa <__stack+0xfb>
 9ea:	60 81       	ld	r22, Z
 9ec:	71 81       	ldd	r23, Z+1	; 0x01
 9ee:	07 2e       	mov	r0, r23
 9f0:	00 0c       	add	r0, r0
 9f2:	88 0b       	sbc	r24, r24
 9f4:	99 0b       	sbc	r25, r25
 9f6:	0e 5f       	subi	r16, 0xFE	; 254
 9f8:	1f 4f       	sbci	r17, 0xFF	; 255
 9fa:	f3 2d       	mov	r31, r3
 9fc:	ff 76       	andi	r31, 0x6F	; 111
 9fe:	3f 2e       	mov	r3, r31
 a00:	97 ff       	sbrs	r25, 7
 a02:	09 c0       	rjmp	.+18     	; 0xa16 <__stack+0x117>
 a04:	90 95       	com	r25
 a06:	80 95       	com	r24
 a08:	70 95       	com	r23
 a0a:	61 95       	neg	r22
 a0c:	7f 4f       	sbci	r23, 0xFF	; 255
 a0e:	8f 4f       	sbci	r24, 0xFF	; 255
 a10:	9f 4f       	sbci	r25, 0xFF	; 255
 a12:	f0 68       	ori	r31, 0x80	; 128
 a14:	3f 2e       	mov	r3, r31
 a16:	2a e0       	ldi	r18, 0x0A	; 10
 a18:	30 e0       	ldi	r19, 0x00	; 0
 a1a:	a3 01       	movw	r20, r6
 a1c:	0e 94 35 06 	call	0xc6a	; 0xc6a <__ultoa_invert>
 a20:	88 2e       	mov	r8, r24
 a22:	86 18       	sub	r8, r6
 a24:	45 c0       	rjmp	.+138    	; 0xab0 <__stack+0x1b1>
 a26:	85 37       	cpi	r24, 0x75	; 117
 a28:	31 f4       	brne	.+12     	; 0xa36 <__stack+0x137>
 a2a:	23 2d       	mov	r18, r3
 a2c:	2f 7e       	andi	r18, 0xEF	; 239
 a2e:	b2 2e       	mov	r11, r18
 a30:	2a e0       	ldi	r18, 0x0A	; 10
 a32:	30 e0       	ldi	r19, 0x00	; 0
 a34:	25 c0       	rjmp	.+74     	; 0xa80 <__stack+0x181>
 a36:	93 2d       	mov	r25, r3
 a38:	99 7f       	andi	r25, 0xF9	; 249
 a3a:	b9 2e       	mov	r11, r25
 a3c:	8f 36       	cpi	r24, 0x6F	; 111
 a3e:	c1 f0       	breq	.+48     	; 0xa70 <__stack+0x171>
 a40:	18 f4       	brcc	.+6      	; 0xa48 <__stack+0x149>
 a42:	88 35       	cpi	r24, 0x58	; 88
 a44:	79 f0       	breq	.+30     	; 0xa64 <__stack+0x165>
 a46:	b5 c0       	rjmp	.+362    	; 0xbb2 <__stack+0x2b3>
 a48:	80 37       	cpi	r24, 0x70	; 112
 a4a:	19 f0       	breq	.+6      	; 0xa52 <__stack+0x153>
 a4c:	88 37       	cpi	r24, 0x78	; 120
 a4e:	21 f0       	breq	.+8      	; 0xa58 <__stack+0x159>
 a50:	b0 c0       	rjmp	.+352    	; 0xbb2 <__stack+0x2b3>
 a52:	e9 2f       	mov	r30, r25
 a54:	e0 61       	ori	r30, 0x10	; 16
 a56:	be 2e       	mov	r11, r30
 a58:	b4 fe       	sbrs	r11, 4
 a5a:	0d c0       	rjmp	.+26     	; 0xa76 <__stack+0x177>
 a5c:	fb 2d       	mov	r31, r11
 a5e:	f4 60       	ori	r31, 0x04	; 4
 a60:	bf 2e       	mov	r11, r31
 a62:	09 c0       	rjmp	.+18     	; 0xa76 <__stack+0x177>
 a64:	34 fe       	sbrs	r3, 4
 a66:	0a c0       	rjmp	.+20     	; 0xa7c <__stack+0x17d>
 a68:	29 2f       	mov	r18, r25
 a6a:	26 60       	ori	r18, 0x06	; 6
 a6c:	b2 2e       	mov	r11, r18
 a6e:	06 c0       	rjmp	.+12     	; 0xa7c <__stack+0x17d>
 a70:	28 e0       	ldi	r18, 0x08	; 8
 a72:	30 e0       	ldi	r19, 0x00	; 0
 a74:	05 c0       	rjmp	.+10     	; 0xa80 <__stack+0x181>
 a76:	20 e1       	ldi	r18, 0x10	; 16
 a78:	30 e0       	ldi	r19, 0x00	; 0
 a7a:	02 c0       	rjmp	.+4      	; 0xa80 <__stack+0x181>
 a7c:	20 e1       	ldi	r18, 0x10	; 16
 a7e:	32 e0       	ldi	r19, 0x02	; 2
 a80:	f8 01       	movw	r30, r16
 a82:	b7 fe       	sbrs	r11, 7
 a84:	07 c0       	rjmp	.+14     	; 0xa94 <__stack+0x195>
 a86:	60 81       	ld	r22, Z
 a88:	71 81       	ldd	r23, Z+1	; 0x01
 a8a:	82 81       	ldd	r24, Z+2	; 0x02
 a8c:	93 81       	ldd	r25, Z+3	; 0x03
 a8e:	0c 5f       	subi	r16, 0xFC	; 252
 a90:	1f 4f       	sbci	r17, 0xFF	; 255
 a92:	06 c0       	rjmp	.+12     	; 0xaa0 <__stack+0x1a1>
 a94:	60 81       	ld	r22, Z
 a96:	71 81       	ldd	r23, Z+1	; 0x01
 a98:	80 e0       	ldi	r24, 0x00	; 0
 a9a:	90 e0       	ldi	r25, 0x00	; 0
 a9c:	0e 5f       	subi	r16, 0xFE	; 254
 a9e:	1f 4f       	sbci	r17, 0xFF	; 255
 aa0:	a3 01       	movw	r20, r6
 aa2:	0e 94 35 06 	call	0xc6a	; 0xc6a <__ultoa_invert>
 aa6:	88 2e       	mov	r8, r24
 aa8:	86 18       	sub	r8, r6
 aaa:	fb 2d       	mov	r31, r11
 aac:	ff 77       	andi	r31, 0x7F	; 127
 aae:	3f 2e       	mov	r3, r31
 ab0:	36 fe       	sbrs	r3, 6
 ab2:	0d c0       	rjmp	.+26     	; 0xace <__stack+0x1cf>
 ab4:	23 2d       	mov	r18, r3
 ab6:	2e 7f       	andi	r18, 0xFE	; 254
 ab8:	a2 2e       	mov	r10, r18
 aba:	89 14       	cp	r8, r9
 abc:	58 f4       	brcc	.+22     	; 0xad4 <__stack+0x1d5>
 abe:	34 fe       	sbrs	r3, 4
 ac0:	0b c0       	rjmp	.+22     	; 0xad8 <__stack+0x1d9>
 ac2:	32 fc       	sbrc	r3, 2
 ac4:	09 c0       	rjmp	.+18     	; 0xad8 <__stack+0x1d9>
 ac6:	83 2d       	mov	r24, r3
 ac8:	8e 7e       	andi	r24, 0xEE	; 238
 aca:	a8 2e       	mov	r10, r24
 acc:	05 c0       	rjmp	.+10     	; 0xad8 <__stack+0x1d9>
 ace:	b8 2c       	mov	r11, r8
 ad0:	a3 2c       	mov	r10, r3
 ad2:	03 c0       	rjmp	.+6      	; 0xada <__stack+0x1db>
 ad4:	b8 2c       	mov	r11, r8
 ad6:	01 c0       	rjmp	.+2      	; 0xada <__stack+0x1db>
 ad8:	b9 2c       	mov	r11, r9
 ada:	a4 fe       	sbrs	r10, 4
 adc:	0f c0       	rjmp	.+30     	; 0xafc <__stack+0x1fd>
 ade:	fe 01       	movw	r30, r28
 ae0:	e8 0d       	add	r30, r8
 ae2:	f1 1d       	adc	r31, r1
 ae4:	80 81       	ld	r24, Z
 ae6:	80 33       	cpi	r24, 0x30	; 48
 ae8:	21 f4       	brne	.+8      	; 0xaf2 <__stack+0x1f3>
 aea:	9a 2d       	mov	r25, r10
 aec:	99 7e       	andi	r25, 0xE9	; 233
 aee:	a9 2e       	mov	r10, r25
 af0:	09 c0       	rjmp	.+18     	; 0xb04 <__stack+0x205>
 af2:	a2 fe       	sbrs	r10, 2
 af4:	06 c0       	rjmp	.+12     	; 0xb02 <__stack+0x203>
 af6:	b3 94       	inc	r11
 af8:	b3 94       	inc	r11
 afa:	04 c0       	rjmp	.+8      	; 0xb04 <__stack+0x205>
 afc:	8a 2d       	mov	r24, r10
 afe:	86 78       	andi	r24, 0x86	; 134
 b00:	09 f0       	breq	.+2      	; 0xb04 <__stack+0x205>
 b02:	b3 94       	inc	r11
 b04:	a3 fc       	sbrc	r10, 3
 b06:	11 c0       	rjmp	.+34     	; 0xb2a <__stack+0x22b>
 b08:	a0 fe       	sbrs	r10, 0
 b0a:	06 c0       	rjmp	.+12     	; 0xb18 <__stack+0x219>
 b0c:	b2 14       	cp	r11, r2
 b0e:	88 f4       	brcc	.+34     	; 0xb32 <__stack+0x233>
 b10:	28 0c       	add	r2, r8
 b12:	92 2c       	mov	r9, r2
 b14:	9b 18       	sub	r9, r11
 b16:	0e c0       	rjmp	.+28     	; 0xb34 <__stack+0x235>
 b18:	b2 14       	cp	r11, r2
 b1a:	60 f4       	brcc	.+24     	; 0xb34 <__stack+0x235>
 b1c:	b6 01       	movw	r22, r12
 b1e:	80 e2       	ldi	r24, 0x20	; 32
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 b26:	b3 94       	inc	r11
 b28:	f7 cf       	rjmp	.-18     	; 0xb18 <__stack+0x219>
 b2a:	b2 14       	cp	r11, r2
 b2c:	18 f4       	brcc	.+6      	; 0xb34 <__stack+0x235>
 b2e:	2b 18       	sub	r2, r11
 b30:	02 c0       	rjmp	.+4      	; 0xb36 <__stack+0x237>
 b32:	98 2c       	mov	r9, r8
 b34:	21 2c       	mov	r2, r1
 b36:	a4 fe       	sbrs	r10, 4
 b38:	10 c0       	rjmp	.+32     	; 0xb5a <__stack+0x25b>
 b3a:	b6 01       	movw	r22, r12
 b3c:	80 e3       	ldi	r24, 0x30	; 48
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 b44:	a2 fe       	sbrs	r10, 2
 b46:	17 c0       	rjmp	.+46     	; 0xb76 <__stack+0x277>
 b48:	a1 fc       	sbrc	r10, 1
 b4a:	03 c0       	rjmp	.+6      	; 0xb52 <__stack+0x253>
 b4c:	88 e7       	ldi	r24, 0x78	; 120
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	02 c0       	rjmp	.+4      	; 0xb56 <__stack+0x257>
 b52:	88 e5       	ldi	r24, 0x58	; 88
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	b6 01       	movw	r22, r12
 b58:	0c c0       	rjmp	.+24     	; 0xb72 <__stack+0x273>
 b5a:	8a 2d       	mov	r24, r10
 b5c:	86 78       	andi	r24, 0x86	; 134
 b5e:	59 f0       	breq	.+22     	; 0xb76 <__stack+0x277>
 b60:	a1 fe       	sbrs	r10, 1
 b62:	02 c0       	rjmp	.+4      	; 0xb68 <__stack+0x269>
 b64:	8b e2       	ldi	r24, 0x2B	; 43
 b66:	01 c0       	rjmp	.+2      	; 0xb6a <__stack+0x26b>
 b68:	80 e2       	ldi	r24, 0x20	; 32
 b6a:	a7 fc       	sbrc	r10, 7
 b6c:	8d e2       	ldi	r24, 0x2D	; 45
 b6e:	b6 01       	movw	r22, r12
 b70:	90 e0       	ldi	r25, 0x00	; 0
 b72:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 b76:	89 14       	cp	r8, r9
 b78:	38 f4       	brcc	.+14     	; 0xb88 <__stack+0x289>
 b7a:	b6 01       	movw	r22, r12
 b7c:	80 e3       	ldi	r24, 0x30	; 48
 b7e:	90 e0       	ldi	r25, 0x00	; 0
 b80:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 b84:	9a 94       	dec	r9
 b86:	f7 cf       	rjmp	.-18     	; 0xb76 <__stack+0x277>
 b88:	8a 94       	dec	r8
 b8a:	f3 01       	movw	r30, r6
 b8c:	e8 0d       	add	r30, r8
 b8e:	f1 1d       	adc	r31, r1
 b90:	80 81       	ld	r24, Z
 b92:	b6 01       	movw	r22, r12
 b94:	90 e0       	ldi	r25, 0x00	; 0
 b96:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 b9a:	81 10       	cpse	r8, r1
 b9c:	f5 cf       	rjmp	.-22     	; 0xb88 <__stack+0x289>
 b9e:	22 20       	and	r2, r2
 ba0:	09 f4       	brne	.+2      	; 0xba4 <__stack+0x2a5>
 ba2:	42 ce       	rjmp	.-892    	; 0x828 <vfprintf+0x24>
 ba4:	b6 01       	movw	r22, r12
 ba6:	80 e2       	ldi	r24, 0x20	; 32
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <fputc>
 bae:	2a 94       	dec	r2
 bb0:	f6 cf       	rjmp	.-20     	; 0xb9e <__stack+0x29f>
 bb2:	f6 01       	movw	r30, r12
 bb4:	86 81       	ldd	r24, Z+6	; 0x06
 bb6:	97 81       	ldd	r25, Z+7	; 0x07
 bb8:	02 c0       	rjmp	.+4      	; 0xbbe <__stack+0x2bf>
 bba:	8f ef       	ldi	r24, 0xFF	; 255
 bbc:	9f ef       	ldi	r25, 0xFF	; 255
 bbe:	2b 96       	adiw	r28, 0x0b	; 11
 bc0:	e2 e1       	ldi	r30, 0x12	; 18
 bc2:	0c 94 af 06 	jmp	0xd5e	; 0xd5e <__epilogue_restores__>

00000bc6 <strnlen_P>:
 bc6:	fc 01       	movw	r30, r24
 bc8:	05 90       	lpm	r0, Z+
 bca:	61 50       	subi	r22, 0x01	; 1
 bcc:	70 40       	sbci	r23, 0x00	; 0
 bce:	01 10       	cpse	r0, r1
 bd0:	d8 f7       	brcc	.-10     	; 0xbc8 <strnlen_P+0x2>
 bd2:	80 95       	com	r24
 bd4:	90 95       	com	r25
 bd6:	8e 0f       	add	r24, r30
 bd8:	9f 1f       	adc	r25, r31
 bda:	08 95       	ret

00000bdc <strnlen>:
 bdc:	fc 01       	movw	r30, r24
 bde:	61 50       	subi	r22, 0x01	; 1
 be0:	70 40       	sbci	r23, 0x00	; 0
 be2:	01 90       	ld	r0, Z+
 be4:	01 10       	cpse	r0, r1
 be6:	d8 f7       	brcc	.-10     	; 0xbde <strnlen+0x2>
 be8:	80 95       	com	r24
 bea:	90 95       	com	r25
 bec:	8e 0f       	add	r24, r30
 bee:	9f 1f       	adc	r25, r31
 bf0:	08 95       	ret

00000bf2 <fputc>:
 bf2:	0f 93       	push	r16
 bf4:	1f 93       	push	r17
 bf6:	cf 93       	push	r28
 bf8:	df 93       	push	r29
 bfa:	fb 01       	movw	r30, r22
 bfc:	23 81       	ldd	r18, Z+3	; 0x03
 bfe:	21 fd       	sbrc	r18, 1
 c00:	03 c0       	rjmp	.+6      	; 0xc08 <fputc+0x16>
 c02:	8f ef       	ldi	r24, 0xFF	; 255
 c04:	9f ef       	ldi	r25, 0xFF	; 255
 c06:	2c c0       	rjmp	.+88     	; 0xc60 <fputc+0x6e>
 c08:	22 ff       	sbrs	r18, 2
 c0a:	16 c0       	rjmp	.+44     	; 0xc38 <fputc+0x46>
 c0c:	46 81       	ldd	r20, Z+6	; 0x06
 c0e:	57 81       	ldd	r21, Z+7	; 0x07
 c10:	24 81       	ldd	r18, Z+4	; 0x04
 c12:	35 81       	ldd	r19, Z+5	; 0x05
 c14:	42 17       	cp	r20, r18
 c16:	53 07       	cpc	r21, r19
 c18:	44 f4       	brge	.+16     	; 0xc2a <fputc+0x38>
 c1a:	a0 81       	ld	r26, Z
 c1c:	b1 81       	ldd	r27, Z+1	; 0x01
 c1e:	9d 01       	movw	r18, r26
 c20:	2f 5f       	subi	r18, 0xFF	; 255
 c22:	3f 4f       	sbci	r19, 0xFF	; 255
 c24:	31 83       	std	Z+1, r19	; 0x01
 c26:	20 83       	st	Z, r18
 c28:	8c 93       	st	X, r24
 c2a:	26 81       	ldd	r18, Z+6	; 0x06
 c2c:	37 81       	ldd	r19, Z+7	; 0x07
 c2e:	2f 5f       	subi	r18, 0xFF	; 255
 c30:	3f 4f       	sbci	r19, 0xFF	; 255
 c32:	37 83       	std	Z+7, r19	; 0x07
 c34:	26 83       	std	Z+6, r18	; 0x06
 c36:	14 c0       	rjmp	.+40     	; 0xc60 <fputc+0x6e>
 c38:	8b 01       	movw	r16, r22
 c3a:	ec 01       	movw	r28, r24
 c3c:	fb 01       	movw	r30, r22
 c3e:	00 84       	ldd	r0, Z+8	; 0x08
 c40:	f1 85       	ldd	r31, Z+9	; 0x09
 c42:	e0 2d       	mov	r30, r0
 c44:	09 95       	icall
 c46:	89 2b       	or	r24, r25
 c48:	e1 f6       	brne	.-72     	; 0xc02 <fputc+0x10>
 c4a:	d8 01       	movw	r26, r16
 c4c:	16 96       	adiw	r26, 0x06	; 6
 c4e:	8d 91       	ld	r24, X+
 c50:	9c 91       	ld	r25, X
 c52:	17 97       	sbiw	r26, 0x07	; 7
 c54:	01 96       	adiw	r24, 0x01	; 1
 c56:	17 96       	adiw	r26, 0x07	; 7
 c58:	9c 93       	st	X, r25
 c5a:	8e 93       	st	-X, r24
 c5c:	16 97       	sbiw	r26, 0x06	; 6
 c5e:	ce 01       	movw	r24, r28
 c60:	df 91       	pop	r29
 c62:	cf 91       	pop	r28
 c64:	1f 91       	pop	r17
 c66:	0f 91       	pop	r16
 c68:	08 95       	ret

00000c6a <__ultoa_invert>:
 c6a:	fa 01       	movw	r30, r20
 c6c:	aa 27       	eor	r26, r26
 c6e:	28 30       	cpi	r18, 0x08	; 8
 c70:	51 f1       	breq	.+84     	; 0xcc6 <__ultoa_invert+0x5c>
 c72:	20 31       	cpi	r18, 0x10	; 16
 c74:	81 f1       	breq	.+96     	; 0xcd6 <__ultoa_invert+0x6c>
 c76:	e8 94       	clt
 c78:	6f 93       	push	r22
 c7a:	6e 7f       	andi	r22, 0xFE	; 254
 c7c:	6e 5f       	subi	r22, 0xFE	; 254
 c7e:	7f 4f       	sbci	r23, 0xFF	; 255
 c80:	8f 4f       	sbci	r24, 0xFF	; 255
 c82:	9f 4f       	sbci	r25, 0xFF	; 255
 c84:	af 4f       	sbci	r26, 0xFF	; 255
 c86:	b1 e0       	ldi	r27, 0x01	; 1
 c88:	3e d0       	rcall	.+124    	; 0xd06 <__ultoa_invert+0x9c>
 c8a:	b4 e0       	ldi	r27, 0x04	; 4
 c8c:	3c d0       	rcall	.+120    	; 0xd06 <__ultoa_invert+0x9c>
 c8e:	67 0f       	add	r22, r23
 c90:	78 1f       	adc	r23, r24
 c92:	89 1f       	adc	r24, r25
 c94:	9a 1f       	adc	r25, r26
 c96:	a1 1d       	adc	r26, r1
 c98:	68 0f       	add	r22, r24
 c9a:	79 1f       	adc	r23, r25
 c9c:	8a 1f       	adc	r24, r26
 c9e:	91 1d       	adc	r25, r1
 ca0:	a1 1d       	adc	r26, r1
 ca2:	6a 0f       	add	r22, r26
 ca4:	71 1d       	adc	r23, r1
 ca6:	81 1d       	adc	r24, r1
 ca8:	91 1d       	adc	r25, r1
 caa:	a1 1d       	adc	r26, r1
 cac:	20 d0       	rcall	.+64     	; 0xcee <__ultoa_invert+0x84>
 cae:	09 f4       	brne	.+2      	; 0xcb2 <__ultoa_invert+0x48>
 cb0:	68 94       	set
 cb2:	3f 91       	pop	r19
 cb4:	2a e0       	ldi	r18, 0x0A	; 10
 cb6:	26 9f       	mul	r18, r22
 cb8:	11 24       	eor	r1, r1
 cba:	30 19       	sub	r19, r0
 cbc:	30 5d       	subi	r19, 0xD0	; 208
 cbe:	31 93       	st	Z+, r19
 cc0:	de f6       	brtc	.-74     	; 0xc78 <__ultoa_invert+0xe>
 cc2:	cf 01       	movw	r24, r30
 cc4:	08 95       	ret
 cc6:	46 2f       	mov	r20, r22
 cc8:	47 70       	andi	r20, 0x07	; 7
 cca:	40 5d       	subi	r20, 0xD0	; 208
 ccc:	41 93       	st	Z+, r20
 cce:	b3 e0       	ldi	r27, 0x03	; 3
 cd0:	0f d0       	rcall	.+30     	; 0xcf0 <__ultoa_invert+0x86>
 cd2:	c9 f7       	brne	.-14     	; 0xcc6 <__ultoa_invert+0x5c>
 cd4:	f6 cf       	rjmp	.-20     	; 0xcc2 <__ultoa_invert+0x58>
 cd6:	46 2f       	mov	r20, r22
 cd8:	4f 70       	andi	r20, 0x0F	; 15
 cda:	40 5d       	subi	r20, 0xD0	; 208
 cdc:	4a 33       	cpi	r20, 0x3A	; 58
 cde:	18 f0       	brcs	.+6      	; 0xce6 <__ultoa_invert+0x7c>
 ce0:	49 5d       	subi	r20, 0xD9	; 217
 ce2:	31 fd       	sbrc	r19, 1
 ce4:	40 52       	subi	r20, 0x20	; 32
 ce6:	41 93       	st	Z+, r20
 ce8:	02 d0       	rcall	.+4      	; 0xcee <__ultoa_invert+0x84>
 cea:	a9 f7       	brne	.-22     	; 0xcd6 <__ultoa_invert+0x6c>
 cec:	ea cf       	rjmp	.-44     	; 0xcc2 <__ultoa_invert+0x58>
 cee:	b4 e0       	ldi	r27, 0x04	; 4
 cf0:	a6 95       	lsr	r26
 cf2:	97 95       	ror	r25
 cf4:	87 95       	ror	r24
 cf6:	77 95       	ror	r23
 cf8:	67 95       	ror	r22
 cfa:	ba 95       	dec	r27
 cfc:	c9 f7       	brne	.-14     	; 0xcf0 <__ultoa_invert+0x86>
 cfe:	00 97       	sbiw	r24, 0x00	; 0
 d00:	61 05       	cpc	r22, r1
 d02:	71 05       	cpc	r23, r1
 d04:	08 95       	ret
 d06:	9b 01       	movw	r18, r22
 d08:	ac 01       	movw	r20, r24
 d0a:	0a 2e       	mov	r0, r26
 d0c:	06 94       	lsr	r0
 d0e:	57 95       	ror	r21
 d10:	47 95       	ror	r20
 d12:	37 95       	ror	r19
 d14:	27 95       	ror	r18
 d16:	ba 95       	dec	r27
 d18:	c9 f7       	brne	.-14     	; 0xd0c <__ultoa_invert+0xa2>
 d1a:	62 0f       	add	r22, r18
 d1c:	73 1f       	adc	r23, r19
 d1e:	84 1f       	adc	r24, r20
 d20:	95 1f       	adc	r25, r21
 d22:	a0 1d       	adc	r26, r0
 d24:	08 95       	ret

00000d26 <__prologue_saves__>:
 d26:	2f 92       	push	r2
 d28:	3f 92       	push	r3
 d2a:	4f 92       	push	r4
 d2c:	5f 92       	push	r5
 d2e:	6f 92       	push	r6
 d30:	7f 92       	push	r7
 d32:	8f 92       	push	r8
 d34:	9f 92       	push	r9
 d36:	af 92       	push	r10
 d38:	bf 92       	push	r11
 d3a:	cf 92       	push	r12
 d3c:	df 92       	push	r13
 d3e:	ef 92       	push	r14
 d40:	ff 92       	push	r15
 d42:	0f 93       	push	r16
 d44:	1f 93       	push	r17
 d46:	cf 93       	push	r28
 d48:	df 93       	push	r29
 d4a:	cd b7       	in	r28, 0x3d	; 61
 d4c:	de b7       	in	r29, 0x3e	; 62
 d4e:	ca 1b       	sub	r28, r26
 d50:	db 0b       	sbc	r29, r27
 d52:	0f b6       	in	r0, 0x3f	; 63
 d54:	f8 94       	cli
 d56:	de bf       	out	0x3e, r29	; 62
 d58:	0f be       	out	0x3f, r0	; 63
 d5a:	cd bf       	out	0x3d, r28	; 61
 d5c:	09 94       	ijmp

00000d5e <__epilogue_restores__>:
 d5e:	2a 88       	ldd	r2, Y+18	; 0x12
 d60:	39 88       	ldd	r3, Y+17	; 0x11
 d62:	48 88       	ldd	r4, Y+16	; 0x10
 d64:	5f 84       	ldd	r5, Y+15	; 0x0f
 d66:	6e 84       	ldd	r6, Y+14	; 0x0e
 d68:	7d 84       	ldd	r7, Y+13	; 0x0d
 d6a:	8c 84       	ldd	r8, Y+12	; 0x0c
 d6c:	9b 84       	ldd	r9, Y+11	; 0x0b
 d6e:	aa 84       	ldd	r10, Y+10	; 0x0a
 d70:	b9 84       	ldd	r11, Y+9	; 0x09
 d72:	c8 84       	ldd	r12, Y+8	; 0x08
 d74:	df 80       	ldd	r13, Y+7	; 0x07
 d76:	ee 80       	ldd	r14, Y+6	; 0x06
 d78:	fd 80       	ldd	r15, Y+5	; 0x05
 d7a:	0c 81       	ldd	r16, Y+4	; 0x04
 d7c:	1b 81       	ldd	r17, Y+3	; 0x03
 d7e:	aa 81       	ldd	r26, Y+2	; 0x02
 d80:	b9 81       	ldd	r27, Y+1	; 0x01
 d82:	ce 0f       	add	r28, r30
 d84:	d1 1d       	adc	r29, r1
 d86:	0f b6       	in	r0, 0x3f	; 63
 d88:	f8 94       	cli
 d8a:	de bf       	out	0x3e, r29	; 62
 d8c:	0f be       	out	0x3f, r0	; 63
 d8e:	cd bf       	out	0x3d, r28	; 61
 d90:	ed 01       	movw	r28, r26
 d92:	08 95       	ret

00000d94 <_exit>:
 d94:	f8 94       	cli

00000d96 <__stop_program>:
 d96:	ff cf       	rjmp	.-2      	; 0xd96 <__stop_program>
